from sqlalchemy.ext.asyncio import AsyncSession
from app.models import user_model
from app.schemas import user_schema
from app.core.security import hash_password

async def create_user(db: AsyncSession, user: user_schema.UserCreate) -> user_model.User:
    """
    Creates a new user in the database.

    Args:
        db: The database session.
        user: The user creation data (from the UserCreate schema).

    Returns:
        The newly created user object.
    """
    # Hash the user's plain-text password
    hashed_pass = hash_password(user.password)

    # Create a new User database model instance
    db_user = user_model.User(
        email=user.email,
        name=user.name,
        hashed_password=hashed_pass
    )

    # Add the new user to the session
    db.add(db_user)
    # Commit the transaction to save the user to the database
    await db.commit()
    # Refresh the instance to get the data that was generated by the database (like the ID)
    await db.refresh(db_user)
    
    return db_user